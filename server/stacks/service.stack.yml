AWSTemplateFormatVersion: '2010-09-09'
Description: Live Streaming Server
Parameters:

  VPCStack:
    Default: 'video-streaming-vpc'
    Type: String
    Description: VPC Stack Name

  ECSStack:
    Default: 'video-streaming-ecs'
    Type: String
    Description: ECS Stack Name

  RedisStack:
    Default: 'video-streaming-redis'
    Type: String
    Description: Redis Stack Name

  AssetsStack:
    Default: 'video-streaming-assets'
    Type: String
    Description: Assets Stack Name

  DesiredCount:
    Type: Number
    Default: '2'
    Description: Desired task count

  Version:
    Type: String
    Description: Service version

  RtmpPort:
    Type: String
    Description: Rtmp Port
    Default: 1935

  HttpPort:
    Type: String
    Description: Http Port
    Default: 8000

  TaskMemory:
    Type: Number
    Description: Task Memory Max
    Default:  128 #31232

Resources:

  CloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref AWS::StackName
      RetentionInDays: 365

  # Task Role
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ecs-task-${AWS::StackName}
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
            Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ecs-service-${AWS::StackName}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - '*'
                Resource:
                  - '*'
  
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref AWS::StackName
      TaskRoleArn: !GetAtt TaskRole.Arn
      ContainerDefinitions:
        - Name: !Ref AWS::StackName
          Essential: true
          Image: !Sub "${AWS::AccountId}.dkr.ecr.us-east-1.amazonaws.com/${AWS::StackName}:${Version}"
          Memory: !Ref TaskMemory
          PortMappings:
            - ContainerPort: !Ref RtmpPort
              Protocol: tcp
            - ContainerPort: !Ref HttpPort
              Protocol: tcp
          Environment:
            - Name: AWS_REGION
              Value: !Ref AWS::Region
            - Name: ENV
              Value: 'production'
            - Name: NODE_ENV
              Value: 'production'
            - Name: AWS_ACCOUNT_ID
              Value: !Ref AWS::AccountId
            - Name: ASSETS_BUCKET
              Value:
                Fn::ImportValue:
                  !Sub "${AssetsStack}-AssetsBucket"
            - Name: CACHE_DOMAIN
              Value: 
                Fn::ImportValue:
                  !Sub "${RedisStack}-Domain"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref AWS::StackName
              awslogs-region: !Ref AWS::Region

  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Ref AWS::StackName
      Cluster:
        Fn::ImportValue:
          !Sub "${ECSStack}-ECSCluster"
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      LaunchType: EC2
      

Outputs:
  Service:
    Value: !Ref 'Service'
    Export:
      Name: !Sub '${AWS::StackName}-Service'
  TaskDefinition:
    Value: !Ref 'TaskDefinition'
    Export:
      Name: !Sub '${AWS::StackName}-TaskDefinition'
  CloudWatchLogsGroup:
    Value: !Ref 'CloudWatchLogsGroup'
    Export:
      Name: !Sub '${AWS::StackName}-CloudWatchLogsGroup'